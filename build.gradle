apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'maven'

repositories {
    mavenCentral()
}

dependencies {
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    providedCompile 'javax.servlet:jstl:1.2'

    def springFrameworkVersion = '4.1.6.RELEASE'
    compile "org.springframework:spring-web:${springFrameworkVersion}",
            "org.springframework:spring-webmvc:${springFrameworkVersion}",
            "org.springframework:spring-beans:${springFrameworkVersion}",
            "org.springframework:spring-context:${springFrameworkVersion}",
            "org.springframework:spring-orm:${springFrameworkVersion}",
            "org.springframework:spring-test:${springFrameworkVersion}",
            "org.springframework:spring-jdbc:${springFrameworkVersion}"

//    compile "org.codehaus.jackson:jackson-mapper-asl:1.9.+"
    compile 'xml-apis:xml-apis:1.4.01'
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'commons-fileupload:commons-fileupload:1.3.1'
    compile 'log4j:log4j:1.2.17'
    compile 'org.apache.ant:ant:1.9.4'
    compile 'org.apache.httpcomponents:httpclient:4.1.2'

    compile 'jsptags:pager-taglib:2.0'
    compile 'mysql:mysql-connector-java:5.1.30'

    def hibernateVision = '4.3.6.Final'
    compile "org.hibernate:hibernate-core:${hibernateVision}",
            "org.hibernate:hibernate-entitymanager:${hibernateVision}",
            "org.hibernate:hibernate-c3p0:${hibernateVision}",
            "org.hibernate:hibernate-annotations:3.5.6-Final"

    testCompile "junit:junit:4.+"
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile "org.mockito:mockito-all:1.8.4"

}

httpPort = 8081
[jettyRun, jettyRunWar, jettyStop]*.stopPort = 9966
[jettyRun, jettyRunWar, jettyStop]*.stopKey = 'stopKey'


task createJavaProject << {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

task createWebProject(dependsOn: 'createJavaProject') << {
    def webAppDir = file("$webAppDirName")
    webAppDir.mkdirs()
}
